name: CI Lint and Tests

# Controls when the action will run. Triggers the workflow on pull request
# events or push events in the develop branch.
on: 
  pull_request:
  push:
    branches:    
      # Push events on develop branch
      - develop

# This workflow has the following jobs:
# linters: Kotlin and Protobuf Linting
# robolectric_tests: Robolectric tests for all modules except the app module
# app_tests: Non-flaky Robolectric tests for the app module
jobs:
  linters:
    name: Lint Tests
    runs-on:  ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-18.04]

    steps:
    - uses: actions/checkout@v2

    - name: Download Ktlint
      run: |
        KTLINT="0.37.0"
        echo Using Ktlint $KTLINT
        curl -sSLO https://github.com/pinterest/ktlint/releases/download/$KTLINT/ktlint
        chmod a+x ktlint
    
    -  name: Download buf
       run: |
        BUFVERSION="v0.15.0"
        echo Using Bufbuild version $BUFVERSION
        curl -sSL https://github.com/bufbuild/buf/releases/download/$BUFVERSION/buf-$(uname -s)-$(uname -m) > buf
        chmod a+x buf
        
    - name: Kotlin lint check
      run: ./ktlint --android domain/src/**/*.kt utility/src/**/*.kt data/src/**/*.kt app/src/**/*.kt testing/src/**/*.kt && echo "Lint completed successfully"
    
    -  name: Protobuf lint check
       run: ./buf check lint --input=model/src/main/proto --input-config buf.yaml && echo "Protobuf lint check completed successfully"
     
  robolectric_tests:
    name: Robolectric Tests (Non-App Modules)
    runs-on:  ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-18.04] 
    steps:
     - uses: actions/checkout@v2
     - uses: actions/cache@v2
       id: cache
       with:
         path: ~/.gradle
         key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}-jars-{{ checksum "build.gradle" }}
         
     - name: Set up JDK 1.9
       uses: actions/setup-java@v1
       with:
          java-version: 1.9

     - name: Install Dependencies
       if: steps.cache.outputs.cache-hit != 'true'
       run: ./gradlew androidDependencies
     
     - name: Build App
       # We require 'sudo' to avoid an error of the existing android sdk. See https://github.com/actions/starter-workflows/issues/58
       run: sudo ./gradlew assembleDebug
    
     - name: Utility tests
       # We require 'sudo' to avoid an error of the existing android sdk. See https://github.com/actions/starter-workflows/issues/58
       run:  sudo ./gradlew :utility:testDebugUnitTest
     - name: Upload Utility Test Reports
       uses: actions/upload-artifact@v2
       if: ${{ always() }} # IMPORTANT: Upload reports regardless of status
       with:
         name: utility reports
         path: utility/build/test-results
     
     - name: Domain tests
       # We require 'sudo' to avoid an error of the existing android sdk. See https://github.com/actions/starter-workflows/issues/58
       run:  sudo ./gradlew :domain:testDebugUnitTest
     - name: Upload Domain Test Reports
       uses: actions/upload-artifact@v2
       if: ${{ always() }} # IMPORTANT: Upload reports regardless of status
       with:
         name: domain reports
         path: domain/build/test-results

     - name: Testing tests
       # We require 'sudo' to avoid an error of the existing android sdk. See https://github.com/actions/starter-workflows/issues/58
       run:  sudo ./gradlew :testing:testDebugUnitTest
     - name: Upload Testing Test Reports
       uses: actions/upload-artifact@v2
       if: ${{ always() }} # IMPORTANT: Upload reports regardless of status
       with:
         name: testing reports
         path: testing/build/test-results
  
  app_tests:
    name: Robolectric Tests - App Module (Non-Flaky)
    runs-on:  ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-18.04]
    steps: 
      - uses: actions/checkout@v2
      
      - uses: actions/cache@v2
        with:
         path: ~/.gradle/caches
         key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}-jars-{{ checksum "build.gradle" }}
         
      - name: Set up JDK 1.9
        uses: actions/setup-java@v1
        with:
          java-version: 1.9
      
      - name: Robolectric tests - FAQ, Help, Mydownloads, Parser, ProfileProgress, RecyclerView, Story, Utility tests
        # We require 'sudo' to avoid an error of the existing android sdk. See https://github.com/actions/starter-workflows/issues/58
        run: |
          sudo ./gradlew :app:testDebugUnitTest --tests org.oppia.app.faq* --tests org.oppia.app.help* --tests org.oppia.app.mydownloads* --tests org.oppia.app.parser* --tests org.oppia.app.profileprogress* --tests org.oppia.app.recyclerview* --tests org.oppia.app.story* --tests org.oppia.app.utility*
      - name: Upload App Test Reports
        uses: actions/upload-artifact@v2
        if: ${{ always() }} # IMPORTANT: Upload reports regardless of status
        with:
         name: app reports
         path: app/build/test-results

  bazel_tests:
    name: Bazel tests
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-18.04]
    steps:
      - name: Setup bazel
        uses: jwlawson/actions-setup-bazel@v1
        with:
          bazel-version: '3.4.1'
      - name: Use bazel
        run: bazel --version
      - name: Clone Oppia Bazel
        run: git clone https://github.com/miaboloix/bazel.git ~/oppia-bazel
      - name: Set up JDK 9
        uses: actions/setup-java@v1
        with:
          java-version: 9
      - name: Build Oppia Bazel
        run: |
          cd ~/oppia-bazel
          bazel build //src:bazel //tools/android/runtime_deps:android_tools.tar.gz
#       - name: Extract Android ToolsCurr
#         run: |
#           mkdir $HOME/tmp/android_tools
#           tar -xf $HOME/oppia-bazel/bazel-bin/tools/android/runtime_deps/android_tools.tar.gz -C $HOME/tmp/android_tools
#       - name: Build Oppia binary with Bazel
#         run: sudo $HOME/oppia-bazel/bazel-bin/src/bazel test //:oppia --android_databinding_use_v3_4_args --experimental_android_databinding_v2 --override_repository=android_tools=$HOME/oppia-bazel/tmp/android_tools --java_header_compilation=false --noincremental_dexing --define=android_standalone_dexing_tool=d8_compat_dx
      
      - uses: actions/checkout@v2
      
      - uses: actions/upload-artifact@v2
        with:
          name: bazel-build
          path: ~/oppia-bazel/bazel-bin/src/bazel
      - uses: actions/upload-artifact@v2
        with:
          name: bazel-tools
          path: ~/oppia-bazel/bazel-bin/tools/android/runtime_deps/android_tools.tar.gz

